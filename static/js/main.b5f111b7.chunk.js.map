{"version":3,"sources":["index.js"],"names":["TotalReduction","props","reduction","values","driven","reduce","prod","val","driving","freeSpeed","motor","dtFreeSpeed","wheelDiameter","dtAdjSpeed","speedLoss","style","width","divStyle","display","gridTemplateColumns","JVNCalc","state","effeciency","numGearboxes","numMotors","weight","weightOnDriven","wheelCoeff","event","this","setState","target","name","value","ind","newIds","console","log","onSubmit","handleSubmit","onChange","handleChange","textAlign","handleChangeGearing","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5f111b7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction TotalReduction(props) {\n\tlet driven = props.values.driven.reduce((prod, val) => prod*val)\n\tlet driving = props.values.driving.reduce((prod, val) => prod*val)\n\tlet reduction = driven/driving\n\tlet freeSpeed = 1\n\tswitch (props.values.motor) {\n\t\tcase 'CIM':\n\t\t\tfreeSpeed = 5330;\n\t\t\tbreak\n\t\tcase 'MiniCIM':\n\t\t\tfreeSpeed = 5840;\n\t\t\tbreak\n\t\tcase 'NEO':\n\t\t\tfreeSpeed = 5676;\n\t\t\tbreak\n\t\tcase 'Falcon':\n\t\t\tfreeSpeed = 6380;\n\t\t\tbreak\n\t\tdefault:\n\t\t\tfreeSpeed = 1;\n\t}\n\tlet dtFreeSpeed = freeSpeed*props.values.wheelDiameter*3.142*(1/reduction)/12/60\n\tlet dtAdjSpeed = dtFreeSpeed*props.values.speedLoss/100\n\n\treturn (\n\t\t<fieldset style={{width: \"300px\"}}>\n\t\t\t<legend>output</legend>\n\t\t\treduction: {reduction}:1 \n\t\t\t<div/>\n\t\t\tfree speed: {dtFreeSpeed} fps\n\t\t\t<div/>\n\t\t\tadj speed: {dtAdjSpeed} fps\n\t\t</fieldset>\n\t);\n}\n\nconst divStyle = {\n\tdisplay: 'grid',\n\tgridTemplateColumns: '1fr 1fr',\n\twidth: '150px'\n};\n\nclass JVNCalc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tmotor: \"CIM\", \n    \tspeedLoss: 81, \n    \teffeciency: 90,\n    \tnumGearboxes: 2,\n    \tnumMotors: 2,\n    \tweight: 154,\n    \tweightOnDriven: 100,\n    \twheelDiameter: 4,\n    \twheelCoeff: 1,\n    \tdriving: [1,1,1], \n    \tdriven: [1,1,1]};\n\n  }\n\n  handleChange(event) {\n  \tthis.setState({[event.target.name]: event.target.value});\n  }\n\n  handleChangeGearing(event, ind) {\n\tlet newIds = [...this.state.driving];\n\tconsole.log(event.target.value);\n\tnewIds[ind] = event.target.value;\n\tthis.setState({[event.target.name]: newIds});\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <fieldset style={{width: \"300px\"}}>\n          <legend>motor</legend>\n          <select name=\"motor\" value={this.state.motor} onChange={event => this.handleChange(event)}>\n            <option value=\"CIM\">CIM</option>\n            <option value=\"MiniCIM\">MiniCIM</option>\n            <option value=\"NEO\">NEO</option>\n            <option value=\"Falcon\">Falcon</option>\n          </select>\n        </fieldset>\n        <fieldset style={{width: \"300px\"}}>\n        \t<legend>drivetrain</legend>\n        \tspeed loss constant [%]: \n        \t<input style={{width: \"30px\"}} name=\"speedLoss\" value={this.state.speedLoss} onChange={event => this.handleChange(event)}/>\n        \t<div/>\n        \tdrivetrain effeciency [%]: \n        \t<input style={{width: \"30px\"}} name=\"effeciency\" value={this.state.effeciency} onChange={event => this.handleChange(event)}/>\n        \t<div/>\n        \tnumber of gearboxes [#]:\n        \t<input style={{width: \"30px\"}} name=\"numGearboxes\" value={this.state.numGearboxes} onChange={event => this.handleChange(event)}/>\n        \t<div/>\n        \tnumber of motors per gearbox [#]:\n        \t<input style={{width: \"30px\"}} name=\"numMotors\" value={this.state.numMotors} onChange={event => this.handleChange(event)}/>\n        \t<div/>\n        \ttotal weight [lb]:\n        \t<input style={{width: \"30px\"}} name=\"weight\" value={this.state.weight} onChange={event => this.handleChange(event)}/>\n        \t<div/>\n        \tweight on driven wheels [%]:\n        \t<input style={{width: \"30px\"}} name=\"weightOnDriven\" value={this.state.weightOnDriven} onChange={event => this.handleChange(event)}/>\n        \t<div/>\n        \twheel diameter [in]:\n        \t<input style={{width: \"30px\"}} name=\"wheelDiameter\" value={this.state.wheelDiameter} onChange={event => this.handleChange(event)}/>\n        \t<div/>\n        \twheel coeffecient:\n        \t<input style={{width: \"30px\"}} name=\"wheelCoeff\" value={this.state.wheelCoeff} onChange={event => this.handleChange(event)}/>\n        </fieldset>\n        <fieldset style={{width: \"300px\"}}>\n        \t<legend>gearing</legend>\n        \t<div style={divStyle}>\n        \t\t<div style={{textAlign: 'center'}}>driving</div>\n        \t\t<div style={{textAlign: 'center'}}>driven</div>\n        \t\t<div><input style={{width: \"75px\"}} name=\"driving\" onChange={event => this.handleChangeGearing(event, 0)}/></div>\n        \t\t<div><input style={{width: \"75px\"}} name=\"driven\" onChange={event => this.handleChangeGearing(event, 0)}/></div>\n        \t\t<div><input style={{width: \"75px\"}} name=\"driving\" onChange={event => this.handleChangeGearing(event, 1)}/></div>\n        \t\t<div><input style={{width: \"75px\"}} name=\"driven\" onChange={event => this.handleChangeGearing(event,1)}/></div>\n        \t\t<div><input style={{width: \"75px\"}} name=\"driving\" onChange={event => this.handleChangeGearing(event, 2)}/></div>\n        \t\t<div><input style={{width: \"75px\"}} name=\"driven\" onChange={event => this.handleChangeGearing(event,2)}/></div>\n        \t</div>\n        </fieldset>\n        <TotalReduction values={this.state} driven={this.state.driven}/>\n      </form>\n    );\n  }\n}\n\nReactDOM.render(\n  <JVNCalc />,\n  document.getElementById('root')\n);"],"sourceRoot":""}